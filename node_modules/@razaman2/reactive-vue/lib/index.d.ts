import { Vue } from "vue-class-component";
import EventEmitter from "@razaman2/event-emitter";
export default class ReactiveVue extends Vue {
    protected readonly model?: ReactiveVue;
    protected readonly logging?: boolean;
    protected readonly renderless?: boolean;
    protected readonly config?: {
        [p: string]: any;
    };
    notifications: EventEmitter;
    private loading;
    private state;
    protected loadingStatus(status?: boolean): boolean;
    protected loadingText(message?: string): string;
    protected safeRequest(request: {
        try: Function;
        catch?: (error: any) => any;
        finally?: Function;
    }): Promise<any>;
    render(): import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
    template(): import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
    protected localWrite(data: object, state?: {
        [p: string]: any;
    }): void;
    getData(path?: string | {
        path?: string;
        alternative?: any;
    }, alternative?: any): any;
    setData(data: object): this;
    getDefaultData(): {
        [p: string]: any;
    };
    getDefaultLoadingText(): string;
    isValid(): boolean;
}
//# sourceMappingURL=index.d.ts.map