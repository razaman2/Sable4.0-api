export default class EventEmitter {
    protected events: Array<{
        name: string;
        type: string;
        handlers: Array<Function>;
    }>;
    private errors;
    private types;
    on(subscriptions: string | object, handlers?: Array<Function> | Function): {
        [p: string]: Function;
    };
    once(name: string | object, handlers?: Array<Function> | Function): {
        [p: string]: Function;
    };
    off(name: string): void;
    emit(name?: string, ...params: any): void;
    private find;
    private remove;
    private invoke;
    private register;
}
//# sourceMappingURL=index.d.ts.map